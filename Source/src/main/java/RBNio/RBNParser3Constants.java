/* Generated By:JavaCC: Do not edit this line. RBNParser3Constants.java */
package RBNio;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RBNParser3Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOLtoken = 3;
  /** RegularExpression Id. */
  int EOL = 28;
  /** RegularExpression Id. */
  int CombinationFunction = 29;
  /** RegularExpression Id. */
  int WIFWIF = 30;
  /** RegularExpression Id. */
  int WIFTHEN = 31;
  /** RegularExpression Id. */
  int WIFELSE = 32;
  /** RegularExpression Id. */
  int COMBCOMB = 33;
  /** RegularExpression Id. */
  int COMBWITH = 34;
  /** RegularExpression Id. */
  int COMBFORALL = 35;
  /** RegularExpression Id. */
  int COMBWHERE = 36;
  /** RegularExpression Id. */
  int SOFTMAX = 37;
  /** RegularExpression Id. */
  int COMPUTEWITHTORCH = 38;
  /** RegularExpression Id. */
  int UsingRels = 39;
  /** RegularExpression Id. */
  int FORNUMLAYERS = 40;
  /** RegularExpression Id. */
  int ForFreeVars = 41;
  /** RegularExpression Id. */
  int WithNumValues = 42;
  /** RegularExpression Id. */
  int ATTR = 43;
  /** RegularExpression Id. */
  int X = 44;
  /** RegularExpression Id. */
  int EDGE = 45;
  /** RegularExpression Id. */
  int USINGTORCH = 46;
  /** RegularExpression Id. */
  int Name = 47;
  /** RegularExpression Id. */
  int Path = 48;
  /** RegularExpression Id. */
  int MULT = 49;
  /** RegularExpression Id. */
  int PLUS = 50;
  /** RegularExpression Id. */
  int MINUS = 51;
  /** RegularExpression Id. */
  int Digits = 52;
  /** RegularExpression Id. */
  int NonNegNumber = 53;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinComment = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "<EOLtoken>",
    "\"%\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"\\r\"",
    "<token of kind 8>",
    "\"@\"",
    "\"=\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"#\"",
    "\"$\"",
    "\":\"",
    "\"{\"",
    "\"|\"",
    "\"}\"",
    "\"&\"",
    "\"true\"",
    "\"false\"",
    "\"~\"",
    "\"WITHEDGE\"",
    "<EOL>",
    "<CombinationFunction>",
    "<WIFWIF>",
    "<WIFTHEN>",
    "<WIFELSE>",
    "<COMBCOMB>",
    "<COMBWITH>",
    "<COMBFORALL>",
    "<COMBWHERE>",
    "<SOFTMAX>",
    "<COMPUTEWITHTORCH>",
    "<UsingRels>",
    "<FORNUMLAYERS>",
    "<ForFreeVars>",
    "<WithNumValues>",
    "<ATTR>",
    "<X>",
    "<EDGE>",
    "<USINGTORCH>",
    "<Name>",
    "<Path>",
    "\"*\"",
    "\"+\"",
    "\"-\"",
    "<Digits>",
    "<NonNegNumber>",
  };

}
